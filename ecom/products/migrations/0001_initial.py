# Generated by Django 5.2.4 on 2025-08-05 19:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('ordre', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sous_categories', to='products.categorie')),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('slug', models.SlugField(blank=True, max_length=220, unique=True)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('poids', models.DecimalField(blank=True, decimal_places=3, help_text='Poids en kg', max_digits=8, null=True)),
                ('date_peremption', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('PUBLIE', 'Publié'), ('ARCHIVE', 'Archivé'), ('RUPTURE', 'Rupture de stock')], default='BROUILLON', max_length=10)),
                ('featured', models.BooleanField(default=False, help_text='Produit mis en avant')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='produits', to='products.categorie')),
                ('vendeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['-date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='ImageProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='produits/')),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('ordre', models.PositiveIntegerField(default=0)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.produit')),
            ],
            options={
                'verbose_name': 'Image Produit',
                'verbose_name_plural': 'Images Produits',
                'ordering': ['ordre', 'date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='AvisProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('commentaire', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('modere', models.BooleanField(default=False)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avis', to='products.produit')),
            ],
            options={
                'verbose_name': 'Avis Produit',
                'verbose_name_plural': 'Avis Produits',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='AttributProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_attribut', models.CharField(max_length=100)),
                ('valeur', models.CharField(max_length=200)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributs', to='products.produit')),
            ],
            options={
                'verbose_name': 'Attribut Produit',
                'verbose_name_plural': 'Attributs Produits',
            },
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['status', 'categorie'], name='products_pr_status_44c5e8_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['vendeur', 'status'], name='products_pr_vendeur_a60530_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['featured', 'status'], name='products_pr_feature_e29e44_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='avisproduit',
            unique_together={('produit', 'utilisateur')},
        ),
        migrations.AlterUniqueTogether(
            name='attributproduit',
            unique_together={('produit', 'nom_attribut')},
        ),
    ]
